<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html>
<html b:css='false' b:defaultwidgetversion='2' b:layoutsVersion='3' expr:dir='data:blog.languageDirection' expr:lang='data:blog.locale' xmlns='http://www.w3.org/1999/xhtml' xmlns:b='http://www.google.com/2005/gml/b' xmlns:data='http://www.google.com/2005/gml/data' xmlns:expr='http://www.google.com/2005/gml/expr'>&lt;!--<head>--&gt;<b:include name='body'/>&lt;head&gt;
<meta charset='utf-8'/>
<meta content='IE=edge' http-equiv='X-UA-Compatible'/>
<meta content='width=device-width, initial-scale=1, maximum-scale=1' name='viewport'/>
<b:if cond='data:view.isHomepage'>
  <title><data:blog.title/></title>
  <b:elseif cond='data:view.isPost or data:view.isPage or data:view.search.label'/>
  <title><data:blog.pageName/></title>
  <b:elseif cond='data:view.search.query'/>
  <title><data:view.search.resultsMessage/></title>
  <b:elseif cond='data:view.search and !data:view.search.label and !data:view.search.query'/>
  <title><data:blog.title/></title>
  <b:elseif cond='data:view.isArchive'/>
  <title><data:view.archive.rangeMessage/></title>
  <b:elseif cond='data:view.isError'/>
  <title>404 Not Found</title>
</b:if>
<b:if cond='data:blog.metaDescription'>
  <meta expr:content='data:blog.metaDescription' name='description'/>
  <b:if cond='data:view.isHomepage'>
    <meta expr:content='data:blog.title' name='keywords'/>
    <b:else/>
    <meta expr:content='data:blog.pageName' name='keywords'/>
  </b:if>
  <b:else/>
  <b:if cond='data:view.isHomepage'>
    <meta expr:content='data:blog.title' name='description'/>
    <meta expr:content='data:blog.title' name='keywords'/>
    <b:else/>
    <meta expr:content='data:blog.pageName' name='description'/>
    <meta expr:content='data:blog.pageName' name='keywords'/>
  </b:if>
</b:if>
<b:if cond='data:blog.googleProfileUrl'>
  <link expr:href='data:blog.googleProfileUrl' rel='author'/>
</b:if>
<link expr:href='data:blog.homepageUrl' rel='base'/>
<link expr:href='data:blog.url' rel='canonical'/>
<meta expr:content='data:blog.homepageUrl + &quot;sitemap.xml&quot;' rel='sitemap' type='application/xml'/>
<b:if cond='data:blog.pageType in {&quot;archive&quot;} or data:blog.searchLabel or data:blog.searchQuery'>
  <meta content='noindex/nofollow' name='robots'/>
  <meta content='noindex/nofollow' name='googlebot'/>
  <b:else/>
  <meta content='index/follow' name='robots'/>
  <meta content='index/follow' name='googlebot'/>
</b:if>
<meta expr:content='data:skin.vars.body_background_color' name='theme-color'/>
<meta expr:content='data:skin.vars.body_background_color' name='msapplication-navbutton-color'/>
<meta expr:content='data:skin.vars.body_background_color' name='apple-mobile-web-app-status-bar-style'/>

<!-- Schema.org markup for Google+ -->
<b:if cond='data:view.isMultipleItems'>
  <meta expr:content='data:blog.title' itemprop='name'/>
  <b:elseif cond='data:view.isSingleItem'/>
  <meta expr:content='data:blog.pageName' itemprop='name'/>
</b:if>
<b:if cond='data:blog.metaDescription'>
  <meta expr:content='data:blog.metaDescription' itemprop='description'/>
  <b:else/>
  <meta expr:content='data:blog.pageName' itemprop='description'/>
</b:if>
<b:if cond='data:view.featuredImage'>
  <meta expr:content='resizeImage(data:view.featuredImage, 1200, &quot;1200:630&quot;)' itemprop='image'/>
</b:if>

<!-- markup for facebook -->
<b:if cond='data:view.isMultipleItems'>
  <meta content='website' property='og:type'/>
  <meta expr:content='data:blog.title' property='og:title'/>
  <b:elseif cond='data:view.isSingleItem'/>
  <meta content='article' property='og:type'/>
  <meta expr:content='data:blog.pageName' property='og:title'/>
</b:if>
<meta expr:content='data:blog.url' property='og:url'/>
<meta expr:content='data:blog.title' property='og:site_name'/>
<b:if cond='data:view.featuredImage'>
  <meta expr:content='resizeImage(data:view.featuredImage, 1200, &quot;1200:630&quot;)' property='og:image'/>
  <meta content='800' property='og:image:width'/>
  <meta content='600' property='og:image:height'/>
  <meta expr:content='data:blog.pageName' property='og:image:alt'/>
</b:if>
<b:if cond='data:blog.metaDescription'>
  <meta expr:content='data:blog.metaDescription' property='og:description'/>
  <b:else/>
  <meta expr:content='data:blog.pageName + &quot;.&quot;' property='og:description'/>
</b:if>
<!-- <meta property='og:locale' content='en_US'/> -->
<meta content='id_ID' property='og:locale:alternate'/>
<meta content='' property='fb:app_id'/>
<meta content='' property='fb:admins'/>

<!-- markup for twitter -->
<meta content='summary' name='twitter:card'/>
<b:if cond='data:view.isMultipleItems'>
  <meta expr:content='data:blog.title' name='twitter:title'/>
  <b:elseif cond='data:view.isSingleItem'/>
  <meta expr:content='data:blog.pageName' name='twitter:title'/>
</b:if>
<b:if cond='data:blog.metaDescription'>
  <meta expr:content='data:blog.metaDescription' name='twitter:description'/>
  <b:else/>
  <meta expr:content='data:blog.pageName' name='twitter:description'/>
</b:if>
<meta expr:content='data:blog.title' name='twitter:creator'/>
<b:if cond='data:view.featuredImage'>
  <meta expr:content='resizeImage(data:view.featuredImage, 1200, &quot;1200:630&quot;)' property='twitter:image'/>
</b:if>

<!-- JSON-LD - structured data markup Google Search -->
<script type='application/ld+json'>{
  &quot;@context&quot;: &quot;http://schema.org&quot;,
  &quot;@type&quot;: &quot;WebSite&quot;,
  &quot;name&quot;: &quot;<data:blog.title/>&quot;,
  &quot;alternateName&quot;: &quot;<data:blog.title/>&quot;,
  &quot;url&quot;: &quot;<data:blog.homepageUrl/>&quot;}
</script>
<b:skin version='1.0.0'><![CDATA[
	
	
]]></b:skin>

<style type='text/css'>
@import url(https://fonts.googleapis.com/css?family=Open+Sans:800);#credits,#instructions{position:absolute;width:100%;font-family:&#39;Open Sans&#39;,sans-serif;text-transform:uppercase;text-align:center}#world{background:#ebe5e7;position:absolute;width:100%;height:100%;overflow:hidden}#instructions{top:50%;margin:120px auto auto;color:#653f4c;font-size:.9em;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.lightInstructions{color:#993f4c;font-size:.8em}#credits,#credits a{color:#b297a2}#credits{margin:auto auto 20px;bottom:0;font-size:.7em}
</style>

&lt;!--</head>--&gt;&lt;/head&gt;
&lt;body itemscope=&#39;itemscope&#39; itemtype=&#39;http://schema.org/WebPage&#39;&gt;
<meta content='fullKeyboardControl' itemprop='accessibilityControl'/>
<meta content='fullMouseControl' itemprop='accessibilityControl'/>

<b:section id='reset'/>

<div id='world'/>
<div id='instructions'>Press and drag to make wind<br/><span class='lightInstructions'>the lion will surely appreciate</span></div>

<div id='credits'>
<p> Situs sedang perbaikan, kembali lagi nanti</p>
</div>

<script src='http://cdnjs.cloudflare.com/ajax/libs/three.js/r70/three.min.js'/>
<script src='https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/OrbitControls.js'/>
<script type='text/javascript'>
//<![CDATA[
var scene,camera,controls,fieldOfView,aspectRatio,nearPlane,farPlane,shadowLight,backLight,light,renderer,container,floor,lion,fan,HEIGHT,WIDTH,windowHalfX,windowHalfY,isBlowing=!1,mousePos={x:0,y:0};function init(){scene=new THREE.Scene,HEIGHT=window.innerHeight,WIDTH=window.innerWidth,aspectRatio=WIDTH/HEIGHT,fieldOfView=60,nearPlane=1,farPlane=2e3,(camera=new THREE.PerspectiveCamera(fieldOfView,aspectRatio,nearPlane,farPlane)).position.z=800,camera.position.y=0,camera.lookAt(new THREE.Vector3(0,0,0)),(renderer=new THREE.WebGLRenderer({alpha:!0,antialias:!0})).setPixelRatio(window.devicePixelRatio),renderer.setSize(WIDTH,HEIGHT),renderer.shadowMapEnabled=!0,(container=document.getElementById("world")).appendChild(renderer.domElement),windowHalfX=WIDTH/2,windowHalfY=HEIGHT/2,window.addEventListener("resize",onWindowResize,!1),document.addEventListener("mousemove",handleMouseMove,!1),document.addEventListener("mousedown",handleMouseDown,!1),document.addEventListener("mouseup",handleMouseUp,!1),document.addEventListener("touchstart",handleTouchStart,!1),document.addEventListener("touchend",handleTouchEnd,!1),document.addEventListener("touchmove",handleTouchMove,!1)}function onWindowResize(){HEIGHT=window.innerHeight,WIDTH=window.innerWidth,windowHalfX=WIDTH/2,windowHalfY=HEIGHT/2,renderer.setSize(WIDTH,HEIGHT),camera.aspect=WIDTH/HEIGHT,camera.updateProjectionMatrix()}function handleMouseMove(t){mousePos={x:t.clientX,y:t.clientY}}function handleMouseDown(t){isBlowing=!0}function handleMouseUp(t){isBlowing=!1}function handleTouchStart(t){t.touches.length>1&&(t.preventDefault(),mousePos={x:t.touches[0].pageX,y:t.touches[0].pageY},isBlowing=!0)}function handleTouchEnd(t){mousePos={x:windowHalfX,y:windowHalfY},isBlowing=!1}function handleTouchMove(t){1==t.touches.length&&(t.preventDefault(),mousePos={x:t.touches[0].pageX,y:t.touches[0].pageY})}function createLights(){light=new THREE.HemisphereLight(16777215,16777215,.5),(shadowLight=new THREE.DirectionalLight(16777215,.8)).position.set(200,200,200),shadowLight.castShadow=!0,shadowLight.shadowDarkness=.2,(backLight=new THREE.DirectionalLight(16777215,.4)).position.set(-100,200,50),backLight.shadowDarkness=.1,backLight.castShadow=!0,scene.add(backLight),scene.add(light),scene.add(shadowLight)}function createFloor(){(floor=new THREE.Mesh(new THREE.PlaneBufferGeometry(1e3,500),new THREE.MeshBasicMaterial({color:15459815}))).rotation.x=-Math.PI/2,floor.position.y=-100,floor.receiveShadow=!0,scene.add(floor)}function createLion(){lion=new Lion,scene.add(lion.threegroup)}function createFan(){(fan=new Fan).threegroup.position.z=350,scene.add(fan.threegroup)}function loop(){render();var t=mousePos.x-windowHalfX,i=mousePos.y-windowHalfY;fan.isBlowing=isBlowing,fan.update(t,i),isBlowing?lion.cool(t,i):lion.look(t,i),requestAnimationFrame(loop)}function render(){controls&&controls.update(),renderer.render(scene,camera)}function clamp(t,i,s){return Math.min(Math.max(t,i),s)}function rule3(t,i,s,e,o){return e+(Math.max(Math.min(t,s),i)-i)/(s-i)*(o-e)}dist=0,Fan=function(){this.isBlowing=!1,this.speed=0,this.acc=0,this.redMat=new THREE.MeshLambertMaterial({color:11351333,shading:THREE.FlatShading}),this.greyMat=new THREE.MeshLambertMaterial({color:6635340,shading:THREE.FlatShading}),this.yellowMat=new THREE.MeshLambertMaterial({color:16634486,shading:THREE.FlatShading});var t=new THREE.BoxGeometry(10,10,20),i=new THREE.BoxGeometry(10,10,3),s=new THREE.BoxGeometry(10,30,2);s.applyMatrix((new THREE.Matrix4).makeTranslation(0,25,0)),this.core=new THREE.Mesh(t,this.greyMat);var e=new THREE.Mesh(s,this.redMat);e.position.z=15;var o=e.clone();o.rotation.z=Math.PI/2;var h=e.clone();h.rotation.z=Math.PI;var a=e.clone();a.rotation.z=-Math.PI/2,this.sphere=new THREE.Mesh(i,this.yellowMat),this.sphere.position.z=15,this.propeller=new THREE.Group,this.propeller.add(e),this.propeller.add(o),this.propeller.add(h),this.propeller.add(a),this.threegroup=new THREE.Group,this.threegroup.add(this.core),this.threegroup.add(this.propeller),this.threegroup.add(this.sphere)},Fan.prototype.update=function(t,i){this.threegroup.lookAt(new THREE.Vector3(0,80,60)),this.tPosX=rule3(t,-200,200,-250,250),this.tPosY=rule3(i,-200,200,250,-250),this.threegroup.position.x+=(this.tPosX-this.threegroup.position.x)/10,this.threegroup.position.y+=(this.tPosY-this.threegroup.position.y)/10,this.targetSpeed=this.isBlowing?.3:.01,this.isBlowing&&this.speed<.5?(this.acc+=.001,this.speed+=this.acc):this.isBlowing||(this.acc=0,this.speed*=.98),this.propeller.rotation.z+=this.speed},Lion=function(){this.windTime=0,this.bodyInitPositions=[],this.maneParts=[],this.threegroup=new THREE.Group,this.yellowMat=new THREE.MeshLambertMaterial({color:16634486,shading:THREE.FlatShading}),this.redMat=new THREE.MeshLambertMaterial({color:11351333,shading:THREE.FlatShading}),this.pinkMat=new THREE.MeshLambertMaterial({color:15031595,shading:THREE.FlatShading}),this.whiteMat=new THREE.MeshLambertMaterial({color:16777215,shading:THREE.FlatShading}),this.purpleMat=new THREE.MeshLambertMaterial({color:4528468,shading:THREE.FlatShading}),this.greyMat=new THREE.MeshLambertMaterial({color:6635340,shading:THREE.FlatShading}),this.blackMat=new THREE.MeshLambertMaterial({color:3156261,shading:THREE.FlatShading});var t=new THREE.CylinderGeometry(30,80,140,4),i=new THREE.BoxGeometry(40,40,15),s=new THREE.BoxGeometry(80,80,80),e=new THREE.BoxGeometry(4,4,4),o=new THREE.BoxGeometry(30,2,1);o.applyMatrix((new THREE.Matrix4).makeTranslation(15,0,0));var h=new THREE.BoxGeometry(20,20,20),a=new THREE.BoxGeometry(40,40,20),n=new THREE.BoxGeometry(5,30,30),r=new THREE.BoxGeometry(4,10,10),d=new THREE.BoxGeometry(20,20,10),l=new THREE.TorusGeometry(12,4,2,10,Math.PI),p=new THREE.BoxGeometry(40,15,20),c=new THREE.BoxGeometry(25,80,80);c.applyMatrix((new THREE.Matrix4).makeTranslation(0,50,0));var E=new THREE.BoxGeometry(40,20,20);this.body=new THREE.Mesh(t,this.yellowMat),this.body.position.z=-60,this.body.position.y=-30,this.bodyVertices=[0,1,2,3,4,10];for(var u=0;u<this.bodyVertices.length;u++){var m=this.body.geometry.vertices[this.bodyVertices[u]];m.z=70,this.bodyInitPositions.push({x:m.x,y:m.y,z:m.z})}this.leftKnee=new THREE.Mesh(c,this.yellowMat),this.leftKnee.position.x=65,this.leftKnee.position.z=-20,this.leftKnee.position.y=-110,this.leftKnee.rotation.z=-.3,this.rightKnee=new THREE.Mesh(c,this.yellowMat),this.rightKnee.position.x=-65,this.rightKnee.position.z=-20,this.rightKnee.position.y=-110,this.rightKnee.rotation.z=.3,this.backLeftFoot=new THREE.Mesh(E,this.yellowMat),this.backLeftFoot.position.z=30,this.backLeftFoot.position.x=75,this.backLeftFoot.position.y=-90,this.backRightFoot=new THREE.Mesh(E,this.yellowMat),this.backRightFoot.position.z=30,this.backRightFoot.position.x=-75,this.backRightFoot.position.y=-90,this.frontRightFoot=new THREE.Mesh(E,this.yellowMat),this.frontRightFoot.position.z=40,this.frontRightFoot.position.x=-22,this.frontRightFoot.position.y=-90,this.frontLeftFoot=new THREE.Mesh(E,this.yellowMat),this.frontLeftFoot.position.z=40,this.frontLeftFoot.position.x=22,this.frontLeftFoot.position.y=-90,this.mane=new THREE.Group;for(var w=0;w<4;w++)for(var y=0;y<4;y++){var M,g,f=new THREE.Mesh(i,this.redMat);f.position.x=40*w-60,f.position.y=40*y-60;var H=Math.random()*Math.PI*2;0==w&&0==y||0==w&&3==y||3==w&&0==y||3==w&&3==y?(M=-10-Math.floor(5*Math.random()),g=-5):0==w||0==y||3==w||3==y?(M=-5-Math.floor(5*Math.random()),g=0):(M=0,g=0),this.maneParts.push({mesh:f,amp:M,zOffset:g,periodOffset:H,xInit:f.position.x,yInit:f.position.y}),this.mane.add(f)}this.mane.position.y=-10,this.mane.position.z=80,this.face=new THREE.Mesh(s,this.yellowMat),this.face.position.z=135,this.mustaches=[],this.mustache1=new THREE.Mesh(o,this.greyMat),this.mustache1.position.x=30,this.mustache1.position.y=-5,this.mustache1.position.z=175,this.mustache2=this.mustache1.clone(),this.mustache2.position.x=35,this.mustache2.position.y=-12,this.mustache3=this.mustache1.clone(),this.mustache3.position.y=-19,this.mustache3.position.x=30,this.mustache4=this.mustache1.clone(),this.mustache4.rotation.z=Math.PI,this.mustache4.position.x=-30,this.mustache5=new THREE.Mesh(o,this.blackMat),this.mustache5=this.mustache2.clone(),this.mustache5.rotation.z=Math.PI,this.mustache5.position.x=-35,this.mustache6=new THREE.Mesh(o,this.blackMat),this.mustache6=this.mustache3.clone(),this.mustache6.rotation.z=Math.PI,this.mustache6.position.x=-30,this.mustaches.push(this.mustache1),this.mustaches.push(this.mustache2),this.mustaches.push(this.mustache3),this.mustaches.push(this.mustache4),this.mustaches.push(this.mustache5),this.mustaches.push(this.mustache6),this.spot1=new THREE.Mesh(e,this.redMat),this.spot1.position.x=39,this.spot1.position.z=150,this.spot2=this.spot1.clone(),this.spot2.position.z=160,this.spot2.position.y=-10,this.spot3=this.spot1.clone(),this.spot3.position.z=140,this.spot3.position.y=-15,this.spot4=this.spot1.clone(),this.spot4.position.z=150,this.spot4.position.y=-20,this.spot5=this.spot1.clone(),this.spot5.position.x=-39,this.spot6=this.spot2.clone(),this.spot6.position.x=-39,this.spot7=this.spot3.clone(),this.spot7.position.x=-39,this.spot8=this.spot4.clone(),this.spot8.position.x=-39,this.leftEye=new THREE.Mesh(n,this.whiteMat),this.leftEye.position.x=40,this.leftEye.position.z=120,this.leftEye.position.y=25,this.rightEye=new THREE.Mesh(n,this.whiteMat),this.rightEye.position.x=-40,this.rightEye.position.z=120,this.rightEye.position.y=25,this.leftIris=new THREE.Mesh(r,this.purpleMat),this.leftIris.position.x=42,this.leftIris.position.z=120,this.leftIris.position.y=25,this.rightIris=new THREE.Mesh(r,this.purpleMat),this.rightIris.position.x=-42,this.rightIris.position.z=120,this.rightIris.position.y=25,this.mouth=new THREE.Mesh(d,this.blackMat),this.mouth.position.z=171,this.mouth.position.y=-30,this.mouth.scale.set(.5,.5,1),this.smile=new THREE.Mesh(l,this.greyMat),this.smile.position.z=173,this.smile.position.y=-15,this.smile.rotation.z=-Math.PI,this.lips=new THREE.Mesh(p,this.yellowMat),this.lips.position.z=165,this.lips.position.y=-45,this.rightEar=new THREE.Mesh(h,this.yellowMat),this.rightEar.position.x=-50,this.rightEar.position.y=50,this.rightEar.position.z=105,this.leftEar=new THREE.Mesh(h,this.yellowMat),this.leftEar.position.x=50,this.leftEar.position.y=50,this.leftEar.position.z=105,this.nose=new THREE.Mesh(a,this.greyMat),this.nose.position.z=170,this.nose.position.y=25,this.head=new THREE.Group,this.head.add(this.face),this.head.add(this.mane),this.head.add(this.rightEar),this.head.add(this.leftEar),this.head.add(this.nose),this.head.add(this.leftEye),this.head.add(this.rightEye),this.head.add(this.leftIris),this.head.add(this.rightIris),this.head.add(this.mouth),this.head.add(this.smile),this.head.add(this.lips),this.head.add(this.spot1),this.head.add(this.spot2),this.head.add(this.spot3),this.head.add(this.spot4),this.head.add(this.spot5),this.head.add(this.spot6),this.head.add(this.spot7),this.head.add(this.spot8),this.head.add(this.mustache1),this.head.add(this.mustache2),this.head.add(this.mustache3),this.head.add(this.mustache4),this.head.add(this.mustache5),this.head.add(this.mustache6),this.head.position.y=60,this.threegroup.add(this.body),this.threegroup.add(this.head),this.threegroup.add(this.leftKnee),this.threegroup.add(this.rightKnee),this.threegroup.add(this.backLeftFoot),this.threegroup.add(this.backRightFoot),this.threegroup.add(this.frontRightFoot),this.threegroup.add(this.frontLeftFoot),this.threegroup.traverse(function(t){t instanceof THREE.Mesh&&(t.castShadow=!0,t.receiveShadow=!0)})},Lion.prototype.updateBody=function(t){this.head.rotation.y+=(this.tHeagRotY-this.head.rotation.y)/t,this.head.rotation.x+=(this.tHeadRotX-this.head.rotation.x)/t,this.head.position.x+=(this.tHeadPosX-this.head.position.x)/t,this.head.position.y+=(this.tHeadPosY-this.head.position.y)/t,this.head.position.z+=(this.tHeadPosZ-this.head.position.z)/t,this.leftEye.scale.y+=(this.tEyeScale-this.leftEye.scale.y)/(2*t),this.rightEye.scale.y=this.leftEye.scale.y,this.leftIris.scale.y+=(this.tIrisYScale-this.leftIris.scale.y)/(2*t),this.rightIris.scale.y=this.leftIris.scale.y,this.leftIris.scale.z+=(this.tIrisZScale-this.leftIris.scale.z)/(2*t),this.rightIris.scale.z=this.leftIris.scale.z,this.leftIris.position.y+=(this.tIrisPosY-this.leftIris.position.y)/t,this.rightIris.position.y=this.leftIris.position.y,this.leftIris.position.z+=(this.tLeftIrisPosZ-this.leftIris.position.z)/t,this.rightIris.position.z+=(this.tRightIrisPosZ-this.rightIris.position.z)/t,this.rightKnee.rotation.z+=(this.tRightKneeRotZ-this.rightKnee.rotation.z)/t,this.leftKnee.rotation.z+=(this.tLeftKneeRotZ-this.leftKnee.rotation.z)/t,this.lips.position.x+=(this.tLipsPosX-this.lips.position.x)/t,this.lips.position.y+=(this.tLipsPosY-this.lips.position.y)/t,this.smile.position.x+=(this.tSmilePosX-this.smile.position.x)/t,this.mouth.position.z+=(this.tMouthPosZ-this.mouth.position.z)/t,this.smile.position.z+=(this.tSmilePosZ-this.smile.position.z)/t,this.smile.position.y+=(this.tSmilePosY-this.smile.position.y)/t,this.smile.rotation.z+=(this.tSmileRotZ-this.smile.rotation.z)/t},Lion.prototype.look=function(t,i){this.tHeagRotY=rule3(t,-200,200,-Math.PI/4,Math.PI/4),this.tHeadRotX=rule3(i,-200,200,-Math.PI/4,Math.PI/4),this.tHeadPosX=rule3(t,-200,200,70,-70),this.tHeadPosY=rule3(i,-140,260,20,100),this.tHeadPosZ=0,this.tEyeScale=1,this.tIrisYScale=1,this.tIrisZScale=1,this.tIrisPosY=rule3(i,-200,200,35,15),this.tLeftIrisPosZ=rule3(t,-200,200,130,110),this.tRightIrisPosZ=rule3(t,-200,200,110,130),this.tLipsPosX=0,this.tLipsPosY=-45,this.tSmilePosX=0,this.tMouthPosZ=174,this.tSmilePosZ=173,this.tSmilePosY=-15,this.tSmileRotZ=-Math.PI,this.tRightKneeRotZ=rule3(t,-200,200,.3-Math.PI/8,.3+Math.PI/8),this.tLeftKneeRotZ=rule3(t,-200,200,-.3-Math.PI/8,Math.PI/8-.3),this.updateBody(10),this.mane.rotation.y=0,this.mane.rotation.x=0;for(var s=0;s<this.maneParts.length;s++){(e=this.maneParts[s].mesh).position.z=0,e.rotation.y=0}for(s=0;s<this.mustaches.length;s++){var e;(e=this.mustaches[s]).rotation.y=0}for(s=0;s<this.bodyVertices.length;s++){var o=this.bodyInitPositions[s];this.body.geometry.vertices[this.bodyVertices[s]].x=o.x+this.head.position.x}this.body.geometry.verticesNeedUpdate=!0},Lion.prototype.cool=function(t,i){this.tHeagRotY=rule3(t,-200,200,Math.PI/4,-Math.PI/4),this.tHeadRotX=rule3(i,-200,200,Math.PI/4,-Math.PI/4),this.tHeadPosX=rule3(t,-200,200,-70,70),this.tHeadPosY=rule3(i,-140,260,100,20),this.tHeadPosZ=100,this.tEyeScale=.1,this.tIrisYScale=.1,this.tIrisZScale=3,this.tIrisPosY=20,this.tLeftIrisPosZ=120,this.tRightIrisPosZ=120,this.tLipsPosX=rule3(t,-200,200,-15,15),this.tLipsPosY=rule3(i,-200,200,-45,-40),this.tMouthPosZ=168,this.tSmilePosX=rule3(t,-200,200,-15,15),this.tSmilePosY=rule3(i,-200,200,-20,-8),this.tSmilePosZ=176,this.tSmileRotZ=rule3(t,-200,200,-Math.PI-.3,.3-Math.PI),this.tRightKneeRotZ=rule3(t,-200,200,.3+Math.PI/8,.3-Math.PI/8),this.tLeftKneeRotZ=rule3(t,-200,200,Math.PI/8-.3,-.3-Math.PI/8),this.updateBody(10),this.mane.rotation.y=-.8*this.head.rotation.y,this.mane.rotation.x=-.8*this.head.rotation.x;var s=2e4/(t*t+i*i);s=Math.max(Math.min(s,1),.5),this.windTime+=s;for(var e=0;e<this.maneParts.length;e++){var o=this.maneParts[e].mesh,h=this.maneParts[e].amp,a=this.maneParts[e].zOffset,n=this.maneParts[e].periodOffset;o.position.z=a+Math.cos(this.windTime+n)*h*s*2}this.leftEar.rotation.x=Math.cos(this.windTime)*Math.PI/16*s,this.rightEar.rotation.x=-Math.cos(this.windTime)*Math.PI/16*s;for(e=0;e<this.mustaches.length;e++){o=this.mustaches[e],h=e<3?-Math.PI/8:Math.PI/8;o.rotation.y=h+Math.cos(this.windTime+e)*s*h}for(e=0;e<this.bodyVertices.length;e++){var r=this.bodyInitPositions[e];this.body.geometry.vertices[this.bodyVertices[e]].x=r.x+this.head.position.x}this.body.geometry.verticesNeedUpdate=!0},init(),createLights(),createFloor(),createLion(),createFan(),loop();
//]]>
</script>

<b:defaultmarkups><b:defaultmarkup type='Common'><b:includable id='body'><b:if cond='data:view.isPreview'><body/><b:else/>&lt;!--<body/>--&gt;</b:if></b:includable></b:defaultmarkup></b:defaultmarkups>&lt;/body&gt;
</html>